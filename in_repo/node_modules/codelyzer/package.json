{
  "_args": [
    [
      "codelyzer@https://registry.npmjs.org/codelyzer/-/codelyzer-0.0.12.tgz",
      "/home/allenb/Source/npm_deps_test_main/in_repo"
    ]
  ],
  "_from": "codelyzer@0.0.12",
  "_id": "codelyzer@0.0.12",
  "_inCache": true,
  "_location": "/codelyzer",
  "_phantomChildren": {},
  "_requested": {
    "name": "codelyzer",
    "raw": "codelyzer@https://registry.npmjs.org/codelyzer/-/codelyzer-0.0.12.tgz",
    "rawSpec": "https://registry.npmjs.org/codelyzer/-/codelyzer-0.0.12.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/codelyzer/-/codelyzer-0.0.12.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/codelyzer/-/codelyzer-0.0.12.tgz",
  "_shasum": "56491fef9237f8cc2f5f5862391b27781c36aee0",
  "_shrinkwrap": null,
  "_spec": "codelyzer@https://registry.npmjs.org/codelyzer/-/codelyzer-0.0.12.tgz",
  "_where": "/home/allenb/Source/npm_deps_test_main/in_repo",
  "author": {
    "email": "mgechev@gmail.com",
    "name": "Minko Gechev"
  },
  "bugs": {
    "url": "https://github.com/mgechev/ng2lint/issues"
  },
  "dependencies": {
    "sprintf-js": "^1.0.3"
  },
  "description": "A set of linters for Angular 2 applications, following https://github.com/mgechev/angular2-style-guide.",
  "devDependencies": {
    "chai": "^3.5.0",
    "chai-spies": "^0.7.1",
    "mocha": "^2.4.5",
    "ts-node": "^0.5.5",
    "typings": "^0.6.8"
  },
  "homepage": "https://github.com/mgechev/ng2lint#readme",
  "keywords": [
    "Angular",
    "2",
    "style",
    "guide",
    "ng2lint",
    "lint",
    "tslint"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "codelyzer",
  "optionalDependencies": {},
  "peerDependencies": {
    "tslint": "^3.6.0",
    "typescript": "^1.8.7"
  },
  "readme": "# Codelyzer\n\nA set of tslint rules for static code analysis of Angular 2 TypeScript projects.\n\n## Recommended configuration\n\nBelow you can find a recommended configuration which is based on the [Angular 2 Style Guide](https://github.com/mgechev/angular2-style-guide).\n\n```json\n{\n  \"directive-selector-name\": [true, \"camelCase\"],\n  \"component-selector-name\": [true, \"kebab-case\"],\n  \"directive-selector-type\": [true, \"attribute\"],\n  \"component-selector-type\": [true, \"element\"],\n  \"directive-selector-prefix\": [true, \"sg\"],\n  \"component-selector-prefix\": [true, \"sg\"],\n  \"host-parameter-decorator\": true,\n  \"input-parameter-decorator\": true,\n  \"output-parameter-decorator\": true,\n  \"attribute-parameter-decorator\": true,\n  \"input-property-directive\": true,\n  \"output-property-directive\": true,\n  \"call-forward-ref\":true\n}\n```\n\n## Roadmap\n\n- [x] Directive selector type.\n- [x] Directive selector name convention.\n- [x] Directive selector name prefix.\n- [x] Component selector type.\n- [x] Component selector name convention.\n- [x] Component selector name prefix.\n- [x] Use `@Input` instead of `inputs` decorator property.\n- [x] Use `@Output` instead of `outputs` decorator property.\n- [x] Use `@HostListeners` and `@HostBindings` instead of `host` decorator property.\n- [ ] Do not use `nativeElement` injected with `ElementRef`.\n- [x] Do not rename inputs.\n- [x] Do not rename outputs.\n- [ ] Externalize template above *n* lines of code.\n- [x] Do not use the `@Attribute` decorator.\n- [x] Do not use `forwardRef`.\n- [ ] Rise a warning for impure pipes.\n- [ ] Do not declare global providers.\n- [ ] Follow convention for naming the routes.\n- [ ] Use `@Injectable` instead of `@Inject`.\n- [ ] Single export per module, except facade modules.\n- [ ] Proper naming of modules (kebab-case followed by module type followed by extension for regular modules, module name plus extension name for facades).\n- [ ] Verify if used directive is declared in the current component or any parent component.\n- [ ] Verify that property or method used in the template exists in the current context.\n- [ ] Proper naming of directives and components (name plus `(Directive|Component)` suffix).\n- [ ] Locate component templates in the same directory.\n- [ ] Locate tests in the same directory (rise optional warning when no test file is found).\n- [ ] Rise warning on complex logic inside of the templates.\n- [ ] Do not manipulate elements referenced within the template.\n- [ ] Implement life-cycle hooks explicitly.\n- [ ] Implement Pipe transform interface for pipes.\n- [ ] Proper naming for pipes (kebab-case, optionally prefixed).\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mgechev/ng2lint.git"
  },
  "scripts": {
    "postinstal": "npm run tsc",
    "test": "mocha --compilers ts:ts-node/register",
    "tsc": "tsc",
    "tscw": "tsc -w"
  },
  "version": "0.0.12"
}
